Основи CSS
CSS (каскадні таблиці стилів) — це мова, яка використовується для опису оформлення та розташування елементів у HTML-документі. У цьому уроці 
ти дізнаєшся, як використовувати CSS та стилізувати текст.

В цьому документі ти знайдеш повний список наявних властивостей CSS з описами.

Вбудовані стилі (inline styles)
Вбудовані стилі додаються до елемента за допомогою атрибуту style, де ми пишемо CSS властивості з їх значеннями та розділяємо їх ;:

<p style="color: blue; background-color: yellow">
  This is a paragraph with a blue text and yellow background
</p>

Вбудовані стилі дозволяють швидко побачити результат на сторінці. Але підтримувати їх складно, тому ми не радимо їх використовувати. Зазвичай
 стилі пишуть окремо від HTML за допомогою тегу <style> або в окремому файлі. Але, якщо після дії користувача або іншої події нам потрібно 
 встановити на елемент стилі, які складно додати заздалегідь, вбудовані стилі стануть у пригоді (пізніше в курсі Javascript Advanced ми 
 обговоримо, як це робиться).

Внутрішні стилі
CSS правила можна додати на сторінку за допомогою тегу <style>. Зазвичай він розміщується всередині <head>. Кожне правило CSS починається із 
селектора (способу знаходження елемента на сторінці). Найпростіший селектор — це назва тегу (пізніше ми розглянемо інші селектори). Потім ми 
ставимо фігурні дужки та записуємо одну або кілька властивостей CSS з їх значеннями.

Ось приклад, де ми встановлюємо синій колір тексту для всіх елементів параграфів <p>:

<style>
p {
  color: blue;
}
</style>

Коментарі
Коментарі зазвичай додаються, щоб пояснити, чому було прийняте те чи інше рішення. В CSS коментар можна додати обгорнувши текст у /* та */. 
Будь-який текст між /* та */ ігнорується браузером. У VSCode закоментувати або розкоментувати поточний рядок або виділений текст можна 
натиснувши ctrl + / (або cmd + /). Так можна тимчасово вимкнути деякі правила, щоб побачити як сторінка виглядає без них:

html {
  /* default text color */
  color: grey;

  /* background-color: ligthblue; */
}

Зовнішні стилі
Внутрішні стилі завантажуються разом із HTML-сторінкою, тому ти одразу бачиш її зі стилями, це добре. Але оскільки вміст сторінки може 
змінюватися, то такі стилі не можна закешувати в браузері, щоб не завантажувати знов наступного разу. Це збільшує розмір сторінки й час 
необхідний на її завантаження.

Щоб браузер міг закешувати CSS та зменшити розмір сторінки, стилі можна винести в окремий файл. При першому завантаженні сторінки стилі 
завантажуються і кешуються браузером. Наступного разу стилі беруться з кеша та не завантажуються знов, якщо вони не змінювалися.

Файл стилів підключається до сторінки за допомогою тегу <link> з атрибутами rel="stylesheet" та href з посиланням на файл зі стилями:

<link rel="stylesheet" href="styles.css">

Селектори
Використання імен тегів як селекторів дозволяє стилізувати лише частину однотипних елементів (наприклад окремі параграфи <p> чи посилання
 <a>). Атрибути id та class можуть розв'язати цю проблему.

id
id — це унікальний ідентифікатор елемента, за який браузер може його швидко знайти. Зазвичай його використовують для навігації в межах
 сторінки або у формах, щоб зв'язати текстове поле з підписом до нього. Наприклад:

<h1 id="main-header">
  Mate academy
</h1>

Знайти елемент за id можна додавши # на початку:

#main-header {
 font-family: Arial, Helvetica, sans-serif;
}

Але таке правило стає дуже специфічним, тому ми не радимо використовувати id в CSS.

class
На відміну від id значення атрибута class може повторюватися на сторінці. Крім того, до одного елемента можна додати декілька класів
 розділених пробілами:

<p class="message">This is a message</p>
<p class="message warning">This is a warning message</p>

Знайти елемент за класом можна додавши . на початку:

.message {
  background-color: white;
}

.warning {
  color: red;
}

Класи є найбільш гнучким способом стилізації елементів, тому ми будемо використовувати саме їх.